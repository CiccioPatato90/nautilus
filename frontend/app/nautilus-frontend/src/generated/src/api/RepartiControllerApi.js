/**
 * nautilus-backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Reparti from '../model/Reparti';

/**
* RepartiController service.
* @module api/RepartiControllerApi
* @version 1.0.0-SNAPSHOT
*/
export default class RepartiControllerApi {

    /**
    * Constructs a new RepartiControllerApi. 
    * @alias module:api/RepartiControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/Reparti>} and HTTP response
     */
    repartiListGetWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Reparti];
      return this.apiClient.callApi(
        '/reparti/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/Reparti>}
     */
    repartiListGet() {
      return this.repartiListGetWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Number} repartoId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Reparti} and HTTP response
     */
    repartiRepartoIdPostWithHttpInfo(repartoId) {
      let postBody = null;
      // verify the required parameter 'repartoId' is set
      if (repartoId === undefined || repartoId === null) {
        throw new Error("Missing the required parameter 'repartoId' when calling repartiRepartoIdPost");
      }

      let pathParams = {
        'repartoId': repartoId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Reparti;
      return this.apiClient.callApi(
        '/reparti/{repartoId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Number} repartoId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Reparti}
     */
    repartiRepartoIdPost(repartoId) {
      return this.repartiRepartoIdPostWithHttpInfo(repartoId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
