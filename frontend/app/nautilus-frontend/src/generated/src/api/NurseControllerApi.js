/**
 * nautilus-backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Nurse from '../model/Nurse';

/**
* NurseController service.
* @module api/NurseControllerApi
* @version 1.0.0-SNAPSHOT
*/
export default class NurseControllerApi {

    /**
    * Constructs a new NurseControllerApi. 
    * @alias module:api/NurseControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/Nurse>} and HTTP response
     */
    nursesListGetWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Nurse];
      return this.apiClient.callApi(
        '/nurses/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/Nurse>}
     */
    nursesListGet() {
      return this.nursesListGetWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Number} nurseId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Nurse} and HTTP response
     */
    nursesNurseIdPostWithHttpInfo(nurseId) {
      let postBody = null;
      // verify the required parameter 'nurseId' is set
      if (nurseId === undefined || nurseId === null) {
        throw new Error("Missing the required parameter 'nurseId' when calling nursesNurseIdPost");
      }

      let pathParams = {
        'nurseId': nurseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Nurse;
      return this.apiClient.callApi(
        '/nurses/{nurseId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Number} nurseId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Nurse}
     */
    nursesNurseIdPost(nurseId) {
      return this.nursesNurseIdPostWithHttpInfo(nurseId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
